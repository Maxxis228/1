DROP TABLE glob;
CREATE TABLE glob AS (
SELECT DISTINCT CUSTOMER_GLOBAL_RK FROM CDM.CD_CUSTOMER_PACKAGE WHERE PRIVILEGE_FLG = '1' AND DELETED_FLG = '0' AND IS_ACTIVE_FLG = '1'
MINUS
SELECT DISTINCT CUSTOMER_GLOBAL_RK FROM CDM.CD_INDIVIDUAL_CUSTOMER WHERE (LAST_NM LIKE '#%' )
) WITH DATA PRIMARY INDEX (CUSTOMER_GLOBAL_RK );
COLLECT STATISTICS COLUMN CUSTOMER_GLOBAL_RK ON glob;

DROP TABLE glob_x_cust;
CREATE TABLE glob_x_cust AS (
SELECT cxg.CUSTOMER_GLOBAL_RK, cxg.CUSTOMER_RK 
FROM glob p
JOIN CDM.TECH_CUSTOMER_X_GLOBAL cxg
ON p.CUSTOMER_GLOBAL_RK = cxg.CUSTOMER_GLOBAL_RK
QUALIFY ROW_NUMBER () OVER (PARTITION BY cxg.CUSTOMER_RK ORDER BY cxg.CUSTOMER_GLOBAL_RK DESC) = 1
) WITH DATA PRIMARY INDEX (CUSTOMER_GLOBAL_RK);
COLLECT STATISTICS COLUMN CUSTOMER_GLOBAL_RK ON glob_x_cust;

-------
DROP TABLE cust_priv;
CREATE TABLE cust_priv (CUSTOMER_GLOBAL_RK , CUSTOMER_ID, CUSTOMER_RK, CUSTOMER_TYPE_CD, CUSTOMER_LOCAL_ID, 
SOURCE_SYSTEM_CD, CUSTOMER_NM, BIRTH_DT, DOC_FULL_NUM, ISSUE_DT, TAX_PAYER_NUM, EMPLOYMENT_STATUS_NM,  JOB_CD, JOB_NM)
AS (
SELECT DISTINCT 
c.CUSTOMER_GLOBAL_RK, CAST(c.CUSTOMER_ID AS VARCHAR(12)), c.CUSTOMER_RK, c.CUSTOMER_TYPE_CD, c.CUSTOMER_LOCAL_ID, c.SOURCE_SYSTEM_CD, c.LAST_NM||' '||c.FIRST_NM||' '||c.MIDDLE_NM AS CUSTOMER_NM, 
c.BIRTH_DT, COALESCE(c.DOC_FULL_NUM, '-') AS DOC_FULL_NUM, COALESCE(c.ISSUE_DT, DATE '1900-01-01') AS ISSUE_DT, COALESCE(c.TAX_PAYER_NUM, '-') AS TAX_PAYER_NUM, 
c.EMPLOYMENT_STATUS_NM, COALESCE(c.JOB_CD, '-') AS JOB_CD, COALESCE(c.JOB_NM,'-') AS JOB_NM
FROM CDM.CD_INDIVIDUAL_CUSTOMER c
JOIN glob_x_cust p
ON c.CUSTOMER_GLOBAL_RK=p.CUSTOMER_GLOBAL_RK
AND CAST(CURRENT_TIMESTAMP(0) AS TIMESTAMP(0)) < c.EFFECTIVE_TO_DTTM 
AND CUSTOMER_TYPE_CD = 'Ч' 
AND c.DELETED_FLG = '0' AND c.IS_ACTIVE_FLG = '1'
AND (c.SOURCE_SYSTEM_CD LIKE '000%' /*BISquit*/ OR c.SOURCE_SYSTEM_CD IN ('90983','98000','99000','99995') /*Siebel, Telebank, Way4, Profile*/)
) WITH DATA PRIMARY INDEX (CUSTOMER_GLOBAL_RK, CUSTOMER_RK, SOURCE_SYSTEM_CD);
COLLECT STATISTICS COLUMN CUSTOMER_GLOBAL_RK, COLUMN SOURCE_SYSTEM_CD, COLUMN TAX_PAYER_NUM ON cust_priv;
------------

--CREATE TABLE _cust_priv AS (SELECT * FROM cust_priv) WITH DATA;
--COLLECT STATISTICS COLUMN CUSTOMER_GLOBAL_RK, COLUMN SOURCE_SYSTEM_CD, COLUMN TAX_PAYER_NUM ON _cust_priv;
------------

INSERT INTO cust_priv (CUSTOMER_GLOBAL_RK, CUSTOMER_ID, CUSTOMER_RK, CUSTOMER_TYPE_CD, CUSTOMER_LOCAL_ID, SOURCE_SYSTEM_CD, CUSTOMER_NM, 
BIRTH_DT, DOC_FULL_NUM, ISSUE_DT, TAX_PAYER_NUM, EMPLOYMENT_STATUS_NM, JOB_CD, JOB_NM)
SELECT
p.CUSTOMER_GLOBAL_RK, 
CAST(c.CUSTOMER_ID AS VARCHAR(12)) AS CUSTOMER_ID,
c.CUSTOMER_RK, 
c.CUSTOMER_TYPE_CD, 
COALESCE(c.CUSTOMER_LOCAL_ID, '-') AS CUSTOMER_LOCAL_ID, 
c.SOURCE_SYSTEM_CD, 
c.ORGANIZATION_NM AS CUSTOMER_NM, 
COALESCE(c.REGISTRATION_DT, DATE '1900-01-01') AS BIRTH_DT, 
'-' AS DOC_FULL_NUM, 
DATE '1900-01-01' AS ISSUE_DT, 
p.TAX_PAYER_NUM, 
'Не определено' AS EMPLOYMENT_STATUS_NM, 
'-' AS JOB_CD, 
'-' AS JOB_NM
FROM CDM.CD_CORPORATE_CUSTOMER c
JOIN 
(
SELECT DISTINCT CUSTOMER_GLOBAL_RK, TAX_PAYER_NUM 
FROM cust_priv p
WHERE LENGTH(p.TAX_PAYER_NUM) = 12 
AND p.TAX_PAYER_NUM NOT LIKE '0000000000%' 
AND UPPER(p.TAX_PAYER_NUM) = LOWER(p.TAX_PAYER_NUM) 
) p 
ON p.TAX_PAYER_NUM = c.TAX_PAYER_NUM
AND c.DELETED_FLG='0'
QUALIFY ROW_NUMBER() OVER (PARTITION BY p.CUSTOMER_GLOBAL_RK, c.SOURCE_SYSTEM_CD, c.CUSTOMER_RK ORDER BY c.EFFECTIVE_TO_DTTM DESC) = 1;
COLLECT STATISTICS COLUMN CUSTOMER_GLOBAL_RK, COLUMN SOURCE_SYSTEM_CD, COLUMN CUSTOMER_RK ON cust_priv;

	
	
DROP TABLE cust_priv_wrk_bis;
CREATE TABLE cust_priv_wrk_bis AS (
SELECT 
c.CUSTOMER_GLOBAL_RK, c.CUSTOMER_ID, c.CUSTOMER_RK, c.CUSTOMER_TYPE_CD, c.CUSTOMER_LOCAL_ID, c.SOURCE_SYSTEM_CD, c.CUSTOMER_NM, c.BIRTH_DT, 
c.DOC_FULL_NUM, c.ISSUE_DT, c.TAX_PAYER_NUM, c.EMPLOYMENT_STATUS_NM, c.JOB_CD, c.JOB_NM, 
w.APPLICATION_DT, w.BUSINESS_SHARE_PART, w.EFFECTIVE_FROM_DTTM, w.EFFECTIVE_TO_DTTM, w.EMPLOYER_CNT_CD, w.EMPLOYER_TAX_PAYER_NUM, 
w.EMPLOYER_TYPE_CD, w.EMPLOYMENT_STATUS_CD, w.EMPLOYMENT_YEARS_VALUE, w.INDUSTRY_CD, w.INDUSTRY_EXPERIENCE, w.JOB_CD AS JOB_CD_BQ, w.LABOUR_CONTRACT_TYPE_CD, 
w.ORG_EXPERIENCE_CD, w.WORK_ADDRESS, w.EMPLOYER_NM, w.JOB_NM AS JOB_NM_BQ
FROM
cust_priv c 
LEFT JOIN DDS.CUSTOMER_WORK_HIST w
ON c.CUSTOMER_RK = w.CUSTOMER_RK 
AND c.SOURCE_SYSTEM_CD = w.SOURCE_SYSTEM_CD 
AND c.CUSTOMER_TYPE_CD = w.CUSTOMER_TYPE_CD
AND w.EMPLOYER_TAX_PAYER_NUM IS NOT NULL
AND w.DELETED_FLG = '0' AND w.IS_ACTIVE_FLG = '1'
AND c.CUSTOMER_TYPE_CD = 'Ч'
QUALIFY ROW_NUMBER() OVER (PARTITION BY c.CUSTOMER_GLOBAL_RK, c.CUSTOMER_RK, w.APPLICATION_DT ORDER BY w.EFFECTIVE_TO_DTTM DESC) = 1
) WITH DATA PRIMARY INDEX (CUSTOMER_GLOBAL_RK, CUSTOMER_RK);
COLLECT STATISTICS COLUMN CUSTOMER_GLOBAL_RK, COLUMN SOURCE_SYSTEM_CD, COLUMN CUSTOMER_RK ON cust_priv_wrk_bis;

　
DROP TABLE cust_priv_loans;
CREATE TABLE cust_priv_loans AS (
SELECT DISTINCT c.CUSTOMER_GLOBAL_RK, lo.* 
FROM CDM.CD_LOAN_AGREEMENT lo
JOIN
(SELECT CUSTOMER_GLOBAL_RK, CUSTOMER_RK FROM CDM.TECH_CUST_REGISTRY WHERE CUSTOMER_GLOBAL_RK IN (SELECT DISTINCT CUSTOMER_GLOBAL_RK FROM cust_priv)) c
ON
--CAST(CURRENT_TIMESTAMP(0) AS TIMESTAMP(0)) BETWEEN lo.EFFECTIVE_FROM_DTTM AND lo.EFFECTIVE_TO_DTTM 
--AND 
lo.CUSTOMER_RK = c.CUSTOMER_RK
AND lo.DELETED_FLG='0' AND lo.IS_ACTIVE_FLG = '1'
) WITH DATA;

　
　
DROP TABLE cust_priv_deps;
CREATE TABLE cust_priv_deps AS (
SELECT DISTINCT c.CUSTOMER_GLOBAL_RK, de.* 
FROM CDM.CD_DEPOSIT de
JOIN
(SELECT CUSTOMER_GLOBAL_RK, CUSTOMER_RK FROM CDM.TECH_CUST_REGISTRY WHERE CUSTOMER_GLOBAL_RK IN (SELECT DISTINCT CUSTOMER_GLOBAL_RK FROM cust_priv)) c
ON
--CAST(CURRENT_TIMESTAMP(0) AS TIMESTAMP(0)) BETWEEN de.EFFECTIVE_FROM_DTTM AND de.EFFECTIVE_TO_DTTM 
--AND 
de.CUSTOMER_RK = c.CUSTOMER_RK
AND de.DELETED_FLG='0' AND de.IS_ACTIVE_FLG = '1'
) WITH DATA;

　
DROP TABLE cust_priv_cards;
CREATE TABLE cust_priv_cards AS (
SELECT DISTINCT c.CUSTOMER_GLOBAL_RK, ca.*
FROM CDM.CD_CARD_AGREEMENT ca
JOIN
(SELECT CUSTOMER_GLOBAL_RK, CUSTOMER_RK FROM CDM.TECH_CUST_REGISTRY WHERE CUSTOMER_GLOBAL_RK IN (SELECT DISTINCT CUSTOMER_GLOBAL_RK FROM cust_priv)) c
ON ca.CUSTOMER_RK = c.CUSTOMER_RK
--AND CAST(CURRENT_TIMESTAMP(0) AS TIMESTAMP(0)) BETWEEN ca.EFFECTIVE_FROM_DTTM AND ca.EFFECTIVE_TO_DTTM 
AND ca.DELETED_FLG='0' AND ca.IS_ACTIVE_FLG = '1'
) WITH DATA;

--МН, ПМ с Привилегией
SEL COUNT(DISTINCT CUSTOMER_GLOBAL_RK) FROM cust_priv_loans
WHERE agreement_rk IN (SELECT DISTINCT AGREEMENT_RK FROM contract)

　
SEL * FROM cust_priv_loans WHERE PRODUCT_OPERATIONAL_ID IN ('МН')

------------как выгрузить обороты кредитовые по счету, зная его номер
DROP TABLE acct_entry;
CREATE TABLE acct_entry AS (
SELECT 
t.BUSINESS_DTTM, t.CASH_SYMBOL, t.CLASS_CD, t.CONCLUSION_TURN_FLG, t.SOURCE_SYSTEM_CD, 
t.CREDIT_ACCOUNT_ID, t.CREDIT_ACCOUNT_RK, t.CREDIT_ENTRY_AMT, t.CREDIT_TECH_ACCOUNT_ID, 
t.DEBET_ACCOUNT_ID, t.DEBET_ACCOUNT_RK, t.DEBET_ENTRY_AMT, t.DEBET_TECH_ACCOUNT_ID, 
t.ENTRY_ID,t.ENTRY_DT, t.ENTRY_TYPE_CD, t.LOGIN_RK, 
t.OPER_ID, o.DOC_NUM, o.DOC_TYPE_CD, o.DOC_DT, o.OPER_KIND_CD, o.OPER_DETAILS_DESC,
t.PROCESSED_DTTM, t.ROUTE_CD, t.TRANSACTION_ID, t.VALUE_DT

FROM 
DDS.ACCOUNT_ENTRY t
JOIN DDS.OPERATION o
ON t.OPER_ID = o.OPER_ID 
AND t.SOURCE_SYSTEM_CD = '00000'
AND t.SOURCE_SYSTEM_CD = o.SOURCE_SYSTEM_CD 
AND (t.CREDIT_ACCOUNT_ID LIKE '40817810942030000609~')
) WITH DATA;

　
GRANT SELECT ON cust_priv TO butev;
GRANT SELECT ON cust_priv_wrk_bis TO butev;
GRANT SELECT ON cust_priv_loans TO butev;
GRANT SELECT ON cust_priv_loans TO butev;
GRANT SELECT ON cust_priv_cards TO butev;
GRANT SELECT ON acct_entry TO butev; 
