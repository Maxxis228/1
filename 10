DROP TABLE seg_;
CREATE TABLE seg_ AS (SELECT t.AGREEMENT_RK, s.PLAN_SME_PROFIT_MODEL_CD, s.PLAN_SME_PROFIT_SEGMENT_CD, s.PRIOR_MANAGER_FULL_NM
FROM ( SELECT c.*, x.CUSTOMER_GLOBAL_RK 
FROM ( SELECT DISTINCT AGREEMENT_RK, ISSUE_DT, CUSTOMER_RK FROM _contract ) c ---поменять потом на contract когда собью их
JOIN CDM.TECH_CUSTOMER_X_GLOBAL x
ON (c.CUSTOMER_RK = x.CUSTOMER_RK) AND (c.ISSUE_DT BETWEEN x.EFFECTIVE_FROM_DTTM AND x.EFFECTIVE_TO_DTTM) AND (x.DELETED_FLG = '0') AND (x.CUSTOMER_GLOBAL_TYPE = 'MDM')
) t
JOIN  CDM.AGG_CORPORATE_SME_SEGMENT s ON s.CUSTOMER_GLOBAL_RK = t.CUSTOMER_GLOBAL_RK AND  MONTH_END (t.ISSUE_DT) = s.REPORT_DT
) WITH DATA;

DROP TABLE VINT_DET;
CREATE TABLE VINT_DET AS 
(
SELECT 
CURRENT_DATE - EXTRACT(DAY FROM CURRENT_DATE) AS report_dt,
DET.PRODUCT_NM,
DET.GENERATION_DT,
DET.AGE,
DET.ID,
DET.MIGR_ROOT_AGREEMENT_RK,
DET.pl_flg,
DET.BRANCH_NM,
DET.REGIONAL_OPER_OFFICE_NM,
org.INTERNAL_ORG_ID,
org.INTERNAL_ORG_NM,
RNG.BKT,
(report_dt - df.delinquency_start_dt) AS delinquency_pri_fifo_days,
(report_dt - dfi.delinquency_start_dt) AS delinquency_agg_fifo_days,
DET.DEBT_NL,
CASE 
WHEN RNG.BKT = '0+' AND FL_0 = 1 THEN DEBT_0
WHEN RNG.BKT = '7+' AND FL_7 = 1 THEN DEBT_7
WHEN RNG.BKT = '30+' AND FL_30 = 1 THEN DEBT_30
WHEN RNG.BKT = '60+' AND FL_60 = 1 THEN DEBT_60
WHEN RNG.BKT = '90+' AND FL_90 = 1 THEN DEBT_90
ELSE NULL
END AS DEBT,
cu.CUSTOMER_FULL_NM AS CUSTOMER_NM, cu.CUSTOMER_RK,
s.PLAN_SME_PROFIT_MODEL_CD, s.PLAN_SME_PROFIT_SEGMENT_CD, s.PRIOR_MANAGER_FULL_NM,
lh.EMPLOYEE_NM

FROM
(SELECT 
CAST(DELINQUENCY_RANGE_NM AS VARCHAR(3)) AS BKT
FROM 
VINTAGE_RANGE
) RNG

INNER JOIN
(SELECT
APPLICATION_RK,
pl_flg,
MIGR_ROOT_AGREEMENT_RK,
GENERATION_DT,
AGE,
SOURCE_SYSTEM_CD||CONTRACT_ID AS ID,
PRODUCT_NM,
BRANCH_NM,
REGIONAL_OPER_OFFICE_NM,
MIGR_INIT_EXTRA_OFFICE_RK,
CASE WHEN GL_LVL1_DT IS NOT NULL THEN 1 ELSE 0 END AS FL_0,
CASE WHEN GL_LVL2_DT IS NOT NULL THEN 1 ELSE 0 END AS FL_7,
CASE WHEN GL_LVL3_DT IS NOT NULL THEN 1 ELSE 0 END AS FL_30,
CASE WHEN GL_LVL4_DT IS NOT NULL THEN 1 ELSE 0 END AS FL_60,
CASE WHEN GL_LVL5_DT IS NOT NULL THEN 1 ELSE 0 END AS FL_90,
NL_PRI_BALANCE_AMT+NL_OVERDUE_PRI_BALANCE_AMT AS DEBT_NL,
GL_LVL1_PRI_BALANCE_AMT+GL_LVL1_OVERPRI_BALANCE_AMT AS DEBT_0,
GL_LVL2_PRI_BALANCE_AMT+GL_LVL2_OVERPRI_BALANCE_AMT AS DEBT_7,
GL_LVL3_PRI_BALANCE_AMT+GL_LVL3_OVERPRI_BALANCE_AMT AS DEBT_30,
GL_LVL4_PRI_BALANCE_AMT+GL_LVL4_OVERPRI_BALANCE_AMT AS DEBT_60,
GL_LVL5_PRI_BALANCE_AMT+GL_LVL5_OVERPRI_BALANCE_AMT AS DEBT_90
FROM
VINTAGE_DETAIL_FINAL
WHERE 
GL_LVL1_DT IS NOT NULL
OR GL_LVL2_DT IS NOT NULL
OR GL_LVL3_DT IS NOT NULL
OR GL_LVL4_DT IS NOT NULL
OR GL_LVL5_DT IS NOT NULL
) DET
ON 
DEBT IS NOT NULL
AND
DET.GENERATION_DT >= DATE '2012-12-01'

LEFT JOIN 
(SELECT
s.AGREEMENT_RK,
l.LOGIN_ID AS EMPLOYEE_LOGIN,
COALESCE(l.EMPLOYEE_FULL_NM, l.EMPLOYEE_SHORT_NM) AS EMPLOYEE_NM
FROM
DDS.APP_PRT_STATUS_HISTORY s
JOIN
DDS.LOGIN_HIST l
ON l.LOGIN_RK = s.LOGIN_RK
AND l.SOURCE_SYSTEM_CD = s.SOURCE_SYSTEM_CD
AND l.EFFECTIVE_FROM_DTTM <= s.INPUT_DT
AND l.EFFECTIVE_TO_DTTM >= s.INPUT_DT
AND l.DELETED_FLG = '0'
WHERE 
( s.APP_PRT_STATUS_CD IN ('БВЛ','БВЛ|БВЛ','БЗВ', 'БЗВ|БЗВ') OR s.PREV_APP_PRT_STATUS_CD IN ('БВЛ','БВЛ|БВЛ','БЗВ', 'БЗВ|БЗВ') )
AND s.DELETED_FLG = '0'
QUALIFY ROW_NUMBER() OVER (PARTITION BY s.AGREEMENT_RK ORDER BY s.STATUS_START_DTTM DESC) = 1
) lh
ON 	lh.AGREEMENT_RK = DET.APPLICATION_RK

LEFT JOIN
(SELECT DISTINCT
agreement_rk, customer_rk, customer_type_cd
FROM dds.app_prt
WHERE 
app_prt_type_cd = 'ЗАЯВКИ'
AND product_operational_id IN ('МН', 'ПМ', 'ПШ', 'ПЭ', 'ПЯ')
AND deleted_flg = '0'
AND effective_from_dttm <= CURRENT_DATE
AND effective_to_dttm >= CURRENT_DATE
) a
ON a.agreement_rk = det.application_rk

LEFT JOIN dds.customer_global_registry cu
ON cu.customer_rk = a.customer_rk
AND cu.customer_type_cd = a.customer_type_cd
AND cu.deleted_flg = '0'
AND cu.effective_from_dttm <= CURRENT_DATE
AND cu.effective_to_dttm >= CURRENT_DATE

LEFT JOIN cdm.fct_delinquency df
ON df.agreement_rk = det.MIGR_ROOT_AGREEMENT_RK
AND df.delinquency_method_cd = 'FIFO'
AND df.delinquency_type_cd = 'PRI'
AND df.effective_from_dttm <= CURRENT_DATE - EXTRACT(DAY FROM CURRENT_DATE)
AND df.effective_to_dttm >= CURRENT_DATE - EXTRACT(DAY FROM CURRENT_DATE)
AND df.overdue_rur_amt > 0
AND df.deleted_flg = '0'

LEFT JOIN cdm.fct_delinquency dfi
ON dfi.agreement_rk = det.MIGR_ROOT_AGREEMENT_RK
AND dfi.delinquency_method_cd = 'FIFO'
AND dfi.delinquency_type_cd = 'AGG'
AND dfi.effective_from_dttm <= CURRENT_DATE - EXTRACT(DAY FROM CURRENT_DATE)
AND dfi.effective_to_dttm >= CURRENT_DATE - EXTRACT(DAY FROM CURRENT_DATE)
AND dfi.overdue_rur_amt > 0
AND dfi.deleted_flg = '0'

LEFT JOIN dds.internal_org org
ON det.MIGR_INIT_EXTRA_OFFICE_RK=org.INTERNAL_ORG_RK
AND org.deleted_flg = '0'
AND org.effective_from_dttm <= report_dt
AND org.effective_to_dttm >= report_dt

LEFT JOIN seg_ s
ON det.MIGR_ROOT_AGREEMENT_RK = s.AGREEMENT_RK

) WITH DATA PRIMARY INDEX (MIGR_ROOT_AGREEMENT_RK);



