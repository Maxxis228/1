-----------Выгружаем данные договоров КМБ
DROP TABLE RKO_CREDIT_CONTRACT;
CREATE TABLE RKO_CREDIT_CONTRACT AS (
SELECT DISTINCT
c.CUSTOMER_RK, c.CUSTOMER_TYPE_CD, c.MIGR_ROOT_AGREEMENT_RK, 
COALESCE(c.RECAP_BRANCH_CD, c.SOURCE_SYSTEM_CD) AS BRANCH_CD,
c.CONTRACT_NUM, c.PRODUCT_OPERATIONAL_ID,
COALESCE(c.MIGRATION_ROOT_ISSUE_DT, c.ISSUE_DT) AS ISSUE_DT, 
COALESCE(NULLIFZERO(c.LOAN_RUR_AMT), c.CREDIT_LIMIT_AMT) AS CONTRACT_AMT
FROM CDM.CD_LOAN_AGREEMENT c
WHERE c.CONTRACT_TYPE_CD = 'КРЕДИТ'
AND c.CONTRACT_STATUS_CD NOT IN ('АНКЛ', 'БВВД', 'БВВЗ', 'ВВЕД', 'ВВИВ', 'ВВРВ', 'WAIT_CONF')
AND CURRENT_DATE BETWEEN c.EFFECTIVE_FROM_DTTM AND c.EFFECTIVE_TO_DTTM
AND c.IS_ACTIVE_FLG ^= '2' AND c.DELETED_FLG = '0' 
AND COALESCE(c.MIGRATION_ROOT_ISSUE_DT, c.ISSUE_DT) >= DATE '2012-01-01'
AND (PRODUCT_BANK_ID LIKE '0403%' OR PRODUCT_OPERATIONAL_ID IN ('КР','МЮ','МК','ОВ','ОЮ','ВЛ','ВЮ','ПШ','МН','ПЯ','ПЭ','ПМ','РЛ','РМ','РЮ','РЦ')) 
AND c.TRANSFORMATION_TYPE_CD = 'INITIAL'
) WITH DATA PRIMARY INDEX (CUSTOMER_RK, CUSTOMER_TYPE_CD, MIGR_ROOT_AGREEMENT_RK);
COLLECT STATISTICS 
COLUMN CUSTOMER_RK, COLUMN CUSTOMER_TYPE_CD, COLUMN MIGR_ROOT_AGREEMENT_RK, COLUMN ISSUE_DT, 
COLUMN (CUSTOMER_RK, CUSTOMER_TYPE_CD), COLUMN (CUSTOMER_RK, CUSTOMER_TYPE_CD, ISSUE_DT) ON RKO_CREDIT_CONTRACT;
　
DROP TABLE RKO_CUST_X_GLOB;
CREATE TABLE RKO_CUST_X_GLOB AS (
SELECT DISTINCT
cu.CUSTOMER_GLOBAL_RK, ccu.CUSTOMER_RK, cu.CUSTOMER_TYPE_CD, c.ISSUE_DT, ccu.SOURCE_SYSTEM_CD
FROM RKO_CREDIT_CONTRACT c --Клиенты с кредитными договорами
JOIN CDM.TECH_CUSTOMER_X_GLOBAL cu
ON c.CUSTOMER_RK = cu.CUSTOMER_RK AND c.CUSTOMER_TYPE_CD = cu.CUSTOMER_TYPE_CD 
AND c.ISSUE_DT BETWEEN cu.EFFECTIVE_FROM_DTTM AND cu.EFFECTIVE_TO_DTTM 
AND cu.IS_ACTIVE_FLG ^='2' AND cu.DELETED_FLG = '0' AND cu.CUSTOMER_GLOBAL_TYPE = 'MDM' 
AND cu.SOURCE_SYSTEM_CD IN ('00000', '00002', '00006', '00018', '00040', '00051', '00055', '00056', '00060', '00072', '90974')
JOIN CDM.TECH_CUSTOMER_X_GLOBAL ccu
ON cu.CUSTOMER_GLOBAL_RK = ccu.CUSTOMER_GLOBAL_RK AND cu.CUSTOMER_TYPE_CD = ccu.CUSTOMER_TYPE_CD 
AND c.ISSUE_DT BETWEEN ccu.EFFECTIVE_FROM_DTTM AND ccu.EFFECTIVE_TO_DTTM 
AND ccu.IS_ACTIVE_FLG ^='2' AND ccu.DELETED_FLG = '0' AND ccu.CUSTOMER_GLOBAL_TYPE = 'MDM' 
AND ccu.SOURCE_SYSTEM_CD IN ('00000', '00002', '00006', '00018', '00040', '00051', '00055', '00056', '00060', '00072', '90974')
) WITH DATA PRIMARY INDEX (CUSTOMER_GLOBAL_RK, CUSTOMER_TYPE_CD, CUSTOMER_RK, ISSUE_DT);
COLLECT STATISTICS 
COLUMN CUSTOMER_GLOBAL_RK, COLUMN CUSTOMER_RK, COLUMN CUSTOMER_TYPE_CD, COLUMN ISSUE_DT, COLUMN SOURCE_SYSTEM_CD,
COLUMN (CUSTOMER_RK, CUSTOMER_TYPE_CD), COLUMN (CUSTOMER_RK, ISSUE_DT), COLUMN (CUSTOMER_RK, SOURCE_SYSTEM_CD),
COLUMN (CUSTOMER_RK, CUSTOMER_TYPE_CD, SOURCE_SYSTEM_CD), COLUMN (CUSTOMER_RK, SOURCE_SYSTEM_CD, ISSUE_DT) ON RKO_CUST_X_GLOB;
　
-----------Подтягиваем признаки откр. кр. и залоги от Вострикова
DROP TABLE RKO_CREDIT_PR;
CREATE TABLE RKO_CREDIT_PR AS (
SELECT DISTINCT
t.CUSTOMER_RK, t.CUSTOMER_TYPE_CD, t.MIGR_ROOT_AGREEMENT_RK, t.BRANCH_CD, t.CONTRACT_NUM, t.PRODUCT_OPERATIONAL_ID, t.ISSUE_DT, t.CONTRACT_AMT, 
SUM(CASE WHEN t.ISSUE_DT <= c.CLOSE_DT THEN 1 ELSE 0 END) AS CNT_OPEN,
SUM(CASE WHEN MONTHS_BETWEEN(t.ISSUE_DT, c.CLOSE_DT) > 0 AND MONTHS_BETWEEN(t.ISSUE_DT, c.CLOSE_DT) <= 12 THEN 1 ELSE 0 END) AS CNT_1Y_CLOSED,
SUM(CASE WHEN MONTHS_BETWEEN(t.ISSUE_DT, c.CLOSE_DT) > 0 AND MONTHS_BETWEEN(t.ISSUE_DT, c.CLOSE_DT) <= 24 THEN 1 ELSE 0 END) AS CNT_2Y_CLOSED,
CASE WHEN p.AGREEMENT_RK IS NOT NULL THEN 1 ELSE 0 END AS PL_FLG,
CASE WHEN (p.AGREEMENT_RK IS NOT NULL AND p.pl_realty > 0) THEN 1 ELSE 0 END AS PL_REALTY,
CASE WHEN (p.AGREEMENT_RK IS NOT NULL AND p.pl_transport > 0) THEN 1 ELSE 0 END AS PL_TRANSP
FROM RKO_CREDIT_CONTRACT t
LEFT JOIN (
SELECT DISTINCT
c.CUSTOMER_RK, c.CUSTOMER_TYPE_CD, c.MIGR_ROOT_AGREEMENT_RK, 
COALESCE(c.MIGRATION_ROOT_ISSUE_DT, c.ISSUE_DT) AS ISSUE_DT, 
CASE WHEN c.CLOSE_FACT_DT < CURRENT_DATE THEN c.CLOSE_FACT_DT ELSE c.CLOSE_PLAN_DT END AS CLOSE_DT
FROM CDM.CD_LOAN_AGREEMENT c
WHERE c.CONTRACT_TYPE_CD = 'КРЕДИТ' AND c.CONTRACT_STATUS_CD NOT IN ('АНКЛ', 'БВВД', 'БВВЗ', 'ВВЕД', 'ВВИВ', 'ВВРВ', 'WAIT_CONF')
AND c.IS_ACTIVE_FLG = '1' AND c.DELETED_FLG = '0' AND MIGRATION_ROOT_ISSUE_DT >= DATE '2010-01-01'
AND (PRODUCT_BANK_ID LIKE '0403%' OR PRODUCT_OPERATIONAL_ID IN ('КР','МЮ','МК','ОВ','ОЮ','ВЛ','ВЮ','ПШ','МН','ПЯ','ПЭ','ПМ','РЛ','РМ','РЮ','РЦ')) 
AND c.TRANSFORMATION_TYPE_CD IN ('INITIAL', 'MIGRATION')
QUALIFY ROW_NUMBER() OVER (PARTITION BY c.MIGR_ROOT_AGREEMENT_RK ORDER BY c.TRANSFORMATION_DT DESC) = 1
) c
ON t.CUSTOMER_RK = c.CUSTOMER_RK AND t.CUSTOMER_TYPE_CD = c.CUSTOMER_TYPE_CD
AND t.MIGR_ROOT_AGREEMENT_RK ^= c.MIGR_ROOT_AGREEMENT_RK AND t.ISSUE_DT > c.ISSUE_DT
LEFT JOIN vostrikovgs.issue_pl p 
ON t.MIGR_ROOT_AGREEMENT_RK = p.AGREEMENT_RK
GROUP BY t.CUSTOMER_RK, t.CUSTOMER_TYPE_CD, t.MIGR_ROOT_AGREEMENT_RK, t.BRANCH_CD, t.CONTRACT_NUM, t.PRODUCT_OPERATIONAL_ID, t.ISSUE_DT, t.CONTRACT_AMT, p.AGREEMENT_RK,
PL_FLG, PL_REALTY, PL_TRANSP
) WITH DATA PRIMARY INDEX (CUSTOMER_RK, CUSTOMER_TYPE_CD, MIGR_ROOT_AGREEMENT_RK);
COLLECT STATISTICS 
COLUMN CUSTOMER_RK, COLUMN CUSTOMER_TYPE_CD, COLUMN MIGR_ROOT_AGREEMENT_RK, COLUMN ISSUE_DT, 
COLUMN (CUSTOMER_RK, CUSTOMER_TYPE_CD), COLUMN (CUSTOMER_RK, CUSTOMER_TYPE_CD, ISSUE_DT) ON RKO_CREDIT_PR;
　
-----------Подтягиваем идентификаторы клиентов - стоит операцию перенести в конец и вообще сделать отдельную таблицу с данными клиентов
DROP TABLE RKO_CREDIT_PR1;
CREATE TABLE RKO_CREDIT_PR1 AS (
SELECT DISTINCT
t.CUSTOMER_RK, t.CUSTOMER_TYPE_CD, t.MIGR_ROOT_AGREEMENT_RK, t.BRANCH_CD, t.CONTRACT_NUM, t.PRODUCT_OPERATIONAL_ID, t.ISSUE_DT, t.CONTRACT_AMT,
t.CNT_OPEN, t.CNT_1Y_CLOSED, t.CNT_2Y_CLOSED, t.PL_FLG, t.PL_REALTY, t.PL_TRANSP,
TD_SYSFNLIB.OREPLACE(CASE WHEN t.CUSTOMER_TYPE_CD = 'Ч' THEN UPPER(COALESCE(ci.LAST_NM,'')||' '||COALESCE(ci.FIRST_NM,'')||' '||COALESCE(ci.MIDDLE_NM,''))
WHEN t.CUSTOMER_TYPE_CD = 'Ю' THEN UPPER(COALESCE(co.ORGANIZATION_SHORT_NM, co.ORGANIZATION_NM)) END, 'ИНДИВИДУАЛЬНЫЙ ПРЕДПРИНИМАТЕЛЬ','ИП') AS CUSTOMER_NM, 
co.ORG_TYPE_CD, co.OWNERSHIP_PATTERN_CD, co.OGRN_NUM, COALESCE(ci.TAX_PAYER_NUM, co.TAX_PAYER_NUM) AS INN, 
ci.PASSPORT_FULL_NUM, ci.PASSPORT_ISSUE_DT, ci.PASSPORT_ISSUER_NM
FROM RKO_CREDIT_PR t
LEFT JOIN CDM.CD_INDIVIDUAL_CUSTOMER ci
ON t.CUSTOMER_RK = ci.CUSTOMER_RK AND t.CUSTOMER_TYPE_CD = ci.CUSTOMER_TYPE_CD 
AND ci.DELETED_FLG = '0' AND t.ISSUE_DT BETWEEN ci.EFFECTIVE_FROM_DTTM AND ci.EFFECTIVE_TO_DTTM
LEFT JOIN CDM.CD_CORPORATE_CUSTOMER co
ON t.CUSTOMER_RK = co.CUSTOMER_RK AND t.CUSTOMER_TYPE_CD = co.CUSTOMER_TYPE_CD 
AND co.DELETED_FLG = '0' AND t.ISSUE_DT BETWEEN co.EFFECTIVE_FROM_DTTM AND co.EFFECTIVE_TO_DTTM
GROUP BY t.CUSTOMER_RK, t.CUSTOMER_TYPE_CD, t.MIGR_ROOT_AGREEMENT_RK, t.BRANCH_CD, t.CONTRACT_NUM, t.PRODUCT_OPERATIONAL_ID, t.ISSUE_DT, t.CONTRACT_AMT, 
t.CNT_OPEN, t.CNT_1Y_CLOSED, t.CNT_2Y_CLOSED, t.PL_FLG, t.PL_REALTY, t.PL_TRANSP,
CUSTOMER_NM, co.ORG_TYPE_CD, co.OWNERSHIP_PATTERN_CD, co.OGRN_NUM, INN, ci.PASSPORT_FULL_NUM, ci.PASSPORT_ISSUE_DT, ci.PASSPORT_ISSUER_NM
) WITH DATA PRIMARY INDEX (CUSTOMER_RK, CUSTOMER_TYPE_CD, MIGR_ROOT_AGREEMENT_RK);
COLLECT STATISTICS 
COLUMN CUSTOMER_RK, COLUMN CUSTOMER_TYPE_CD, COLUMN MIGR_ROOT_AGREEMENT_RK, COLUMN ISSUE_DT, 
COLUMN (CUSTOMER_RK, CUSTOMER_TYPE_CD), COLUMN (CUSTOMER_RK, CUSTOMER_TYPE_CD, ISSUE_DT) ON RKO_CREDIT_PR1;
　
DROP TABLE RKO_CUST_X_ACC;
CREATE TABLE RKO_CUST_X_ACC AS (
SELECT DISTINCT
c.CUSTOMER_GLOBAL_RK, c.CUSTOMER_TYPE_CD, c.ISSUE_DT, cu.CUSTOMER_RK, cu.SOURCE_SYSTEM_CD, 
COALESCE(acc.ACCOUNT_RK, acc1.ACCOUNT_RK) AS ACCOUNT_RK, COALESCE(acc.ACCOUNT_NUM, acc1.ACCOUNT_NUM) AS ACCOUNT_NUM
FROM RKO_CREDIT_CONTRACT c --Клиенты с кредитными договорами
JOIN CDM.TECH_CUSTOMER_X_GLOBAL cu
ON c.CUSTOMER_GLOBAL_RK = cu.CUSTOMER_GLOBAL_RK AND c.CUSTOMER_TYPE_CD = cu.CUSTOMER_TYPE_CD 
AND cu.DELETED_FLG = '0' AND cu.CUSTOMER_GLOBAL_TYPE = 'MDM' AND cu.SOURCE_SYSTEM_CD IN ('00000', '00002', '00006', '00018', '00040', '00051', '00055', '00056', '00060', '00072', '90974')
AND c.ISSUE_DT<= cu.EFFECTIVE_TO_DTTM
　
LEFT JOIN DDS.ACCOUNT_BIS_HIST acc
ON acc.CUSTOMER_RK = cu.CUSTOMER_RK AND acc.CUSTOMER_TYPE_CD = cu.CUSTOMER_TYPE_CD AND acc.SOURCE_SYSTEM_CD = cu.SOURCE_SYSTEM_CD
AND acc.CURRENCY_RK = 48 AND acc.GL_ACCOUNT_NUM IN ('40502', '40503', '40602', '40603','40702', '40703', '40802', '40817')
AND acc.DELETED_FLG = '0' AND c.ISSUE_DT <= acc.EFFECTIVE_TO_DTTM
LEFT JOIN DDS.ACCOUNT_CFT_HIST acc1
ON acc1.CUSTOMER_RK = cu.CUSTOMER_RK AND acc1.CUSTOMER_TYPE_CD = cu.CUSTOMER_TYPE_CD AND acc1.SOURCE_SYSTEM_CD = cu.SOURCE_SYSTEM_CD
AND acc1.CURRENCY_RK = 92 AND acc1.GL_ACCOUNT_NUM IN ('40502', '40503', '40602', '40603','40702', '40703', '40802', '40817')
AND acc1.DELETED_FLG = '0' AND c.ISSUE_DT <= acc1.EFFECTIVE_TO_DTTM
QUALIFY ROW_NUMBER() OVER(PARTITION BY cu.CUSTOMER_RK, cu.CUSTOMER_TYPE_CD, c.ISSUE_DT ORDER BY COALESCE(acc.EFFECTIVE_TO_DTTM, acc1.EFFECTIVE_TO_DTTM) DESC) = 1
) WITH DATA PRIMARY INDEX (CUSTOMER_GLOBAL_RK, CUSTOMER_TYPE_CD, CUSTOMER_RK, ISSUE_DT, ACCOUNT_RK);
COLLECT STATISTICS 
COLUMN SOURCE_SYSTEM_CD, COLUMN ISSUE_DT, COLUMN (ISSUE_DT - EXTRACT(DAY FROM ISSUE_DT)) AS ST_REP_DT,
COLUMN (SOURCE_SYSTEM_CD, ACCOUNT_RK), COLUMN (SOURCE_SYSTEM_CD, ISSUE_DT, ACCOUNT_RK) ON RKO_CUST_X_ACC;
　
DROP TABLE RKO_ACC_TURN_CRED; 
CREATE TABLE RKO_ACC_TURN_CRED AS (
SELECT
a.CUSTOMER_GLOBAL_RK, a.SOURCE_SYSTEM_CD, a.CUSTOMER_TYPE_CD, a.ACCOUNT_RK, a.ACCOUNT_NUM, a.MIGR_ROOT_AGREEMENT_RK, a.ISSUE_DT, cal.CALENDAR_DATE AS DT, 
ZEROIFNULL(COALESCE(t.TURN_CREDIT_AMT_NC, t.TURN_CREDIT_AMT)) AS AMT_CREDIT
FROM 
(
SELECT DISTINCT ACCOUNT_RK, ACCOUNT_NUM, CUSTOMER_GLOBAL_RK, SOURCE_SYSTEM_CD, CUSTOMER_TYPE_CD, MIGR_ROOT_AGREEMENT_RK, ISSUE_DT FROM RKO_CUST_X_ACC --currency и source_system_cd под вопросом. не будет дублей с разными currency_rk из BQ и CFT?
) a
JOIN SYS_CALENDAR.CALENDAR cal
ON cal.CALENDAR_DATE BETWEEN ADD_MONTHS(a.ISSUE_DT - EXTRACT(DAY FROM a.ISSUE_DT) + 1, -6) AND a.ISSUE_DT - EXTRACT(DAY FROM a.ISSUE_DT)
LEFT JOIN DDS.ACCOUNT_TURN t
ON t.ACCOUNT_RK = a.ACCOUNT_RK 
AND t.TURN_DT = cal.CALENDAR_DATE
AND t.SOURCE_SYSTEM_CD = a.SOURCE_SYSTEM_CD
) WITH DATA PRIMARY INDEX(ACCOUNT_RK, DT, CUSTOMER_GLOBAL_RK, CUSTOMER_TYPE_CD);
COLLECT STATISTICS COLUMN SOURCE_SYSTEM_CD, COLUMN CUSTOMER_GLOBAL_RK, COLUMN (CUSTOMER_GLOBAL_RK, CUSTOMER_TYPE_CD),
COLUMN (ADD_MONTHS(DT,1) - EXTRACT(DAY FROM ADD_MONTHS(DT,1))) AS REPORT_DT, COLUMN (CUSTOMER_GLOBAL_RK, SOURCE_SYSTEM_CD, CUSTOMER_TYPE_CD),
COLUMN (CUSTOMER_GLOBAL_RK, SOURCE_SYSTEM_CD, CUSTOMER_TYPE_CD, ADD_MONTHS(DT,1) - EXTRACT(DAY FROM ADD_MONTHS(DT,1))) AS ST_ALL_ACCT_TURN,
COLUMN (CUSTOMER_GLOBAL_RK, SOURCE_SYSTEM_CD, CUSTOMER_TYPE_CD, MIGR_ROOT_AGREEMENT_RK, ADD_MONTHS(DT,1) - EXTRACT(DAY FROM ADD_MONTHS(DT,1))) AS ST_ALL_ACCT_TURN1,
COLUMN (CUSTOMER_GLOBAL_RK, SOURCE_SYSTEM_CD, CUSTOMER_TYPE_CD, MIGR_ROOT_AGREEMENT_RK, DT, ADD_MONTHS(DT,1) - EXTRACT(DAY FROM ADD_MONTHS(DT,1))) AS ST_ALL_ACCT_TURN2
ON RKO_ACC_TURN_CRED;
　
DROP TABLE RKO_CUST_ACC_TURN_AGG_CRED;--no load
CREATE TABLE RKO_CUST_ACC_TURN_AGG_CRED AS (
SELECT
t.CUSTOMER_GLOBAL_RK, t.CUSTOMER_TYPE_CD, t.MIGR_ROOT_AGREEMENT_RK, t.ISSUE_DT, 
MONTH_END(t.DT) AS REPORT_DT, 
SUM(t.AMT_CREDIT) AS MONTHLY_CREDIT_AMT, 
SUM(CASE WHEN COALESCE(MONTHS_BETWEEN(MONTH_END(t.ISSUE_DT), REPORT_DT),0) = 1 THEN t.AMT_CREDIT ELSE 0 END) AS TURN_LAG_1M,
SUM(CASE WHEN COALESCE(MONTHS_BETWEEN(MONTH_END(t.ISSUE_DT), REPORT_DT),0) = 2 THEN t.AMT_CREDIT ELSE 0 END) AS TURN_LAG_2M,
SUM(CASE WHEN COALESCE(MONTHS_BETWEEN(MONTH_END(t.ISSUE_DT), REPORT_DT),0) = 3 THEN t.AMT_CREDIT ELSE 0 END) AS TURN_LAG_3M,
SUM(CASE WHEN COALESCE(MONTHS_BETWEEN(MONTH_END(t.ISSUE_DT), REPORT_DT),0) = 4 THEN t.AMT_CREDIT ELSE 0 END) AS TURN_LAG_4M,
SUM(CASE WHEN COALESCE(MONTHS_BETWEEN(MONTH_END(t.ISSUE_DT), REPORT_DT),0) = 5 THEN t.AMT_CREDIT ELSE 0 END) AS TURN_LAG_5M,
SUM(CASE WHEN COALESCE(MONTHS_BETWEEN(MONTH_END(t.ISSUE_DT), REPORT_DT),0) = 6 THEN t.AMT_CREDIT ELSE 0 END) AS TURN_LAG_6M,
SUM(MONTHLY_CREDIT_AMT) OVER (PARTITION BY t.CUSTOMER_GLOBAL_RK, t.ISSUE_DT, t.MIGR_ROOT_AGREEMENT_RK ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS TTL_TURN_6M,
TTL_TURN_6M/6 AS  AVG_TURN_1M,
AVG(MONTHLY_CREDIT_AMT) OVER (PARTITION BY t.CUSTOMER_GLOBAL_RK, t.ISSUE_DT, t.MIGR_ROOT_AGREEMENT_RK ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS AVG_TURN_MTH_ACTIVE,
CASE 
WHEN AVG_TURN_1M BETWEEN 1 AND 100000 THEN 'До 100 т.р.'
WHEN AVG_TURN_1M BETWEEN 100001 AND 1000000 THEN '100 т.р. - 1 млн р.'
WHEN AVG_TURN_1M BETWEEN 1000001 AND 10000000 THEN '1 млн р. - 10 млн р.'
WHEN AVG_TURN_1M BETWEEN 10000001 AND 20000000 THEN '10 млн р. - 20 млн р.'
WHEN AVG_TURN_1M BETWEEN 20000001 AND 30000000 THEN '20 млн р. - 30 млн р.'
WHEN AVG_TURN_1M BETWEEN 30000001 AND 50000000 THEN '30 млн р. - 50 млн р.'
WHEN AVG_TURN_1M >50000000 THEN 'От 50 млн р.' 
ELSE 'Нет оборотов'
END AS TURN_MTH_GROUP, 
CASE 
WHEN AVG_TURN_MTH_ACTIVE BETWEEN 1 AND 100000 THEN 'До 100 т.р.'
WHEN AVG_TURN_MTH_ACTIVE BETWEEN 100001 AND 1000000 THEN '100 т.р. - 1 млн р.'
WHEN AVG_TURN_MTH_ACTIVE BETWEEN 1000001 AND 10000000 THEN '1 млн р. - 10 млн р.'
WHEN AVG_TURN_MTH_ACTIVE BETWEEN 10000001 AND 20000000 THEN '10 млн р. - 20 млн р.'
WHEN AVG_TURN_MTH_ACTIVE BETWEEN 20000001 AND 30000000 THEN '20 млн р. - 30 млн р.'
WHEN AVG_TURN_MTH_ACTIVE BETWEEN 30000001 AND 50000000 THEN '30 млн р. - 50 млн р.'
WHEN AVG_TURN_MTH_ACTIVE >50000000 THEN 'От 50 млн р.' 
ELSE 'Нет оборотов'
END AS TURN_MTH_GROUP_ACTIVE
FROM RKO_ACC_TURN_CRED t
GROUP BY t.CUSTOMER_GLOBAL_RK, t.CUSTOMER_TYPE_CD, t.MIGR_ROOT_AGREEMENT_RK, t.ISSUE_DT, REPORT_DT 
) WITH DATA PRIMARY INDEX(CUSTOMER_GLOBAL_RK, CUSTOMER_TYPE_CD, ISSUE_DT, REPORT_DT);
COLLECT STATISTICS COLUMN (CUSTOMER_GLOBAL_RK, CUSTOMER_TYPE_CD), COLUMN (CUSTOMER_GLOBAL_RK, CUSTOMER_TYPE_CD, REPORT_DT), 
COLUMN (CUSTOMER_GLOBAL_RK, CUSTOMER_TYPE_CD, ISSUE_DT), COLUMN (CUSTOMER_GLOBAL_RK, CUSTOMER_TYPE_CD, REPORT_DT, ISSUE_DT) ON RKO_CUST_ACC_TURN_AGG_CRED;
　
DROP TABLE RKO_CUST_TURN_AGG_CRED;
CREATE TABLE RKO_CUST_TURN_AGG_CRED AS (
SELECT DISTINCT
t.CUSTOMER_GLOBAL_RK, COALESCE(ci.CUSTOMER_MDM_ID, co.CUSTOMER_MDM_ID) AS CUST_MDM_ID, t.CUSTOMER_TYPE_CD, 
t.MIGR_ROOT_AGREEMENT_RK, t.ISSUE_DT, 
SUM(TURN_LAG_1M) AS TURN_LAG_1M, SUM(TURN_LAG_2M) AS TURN_LAG_2M, SUM(TURN_LAG_3M) AS TURN_LAG_3M,
SUM(TURN_LAG_4M) AS TURN_LAG_4M, SUM(TURN_LAG_5M) AS TURN_LAG_5M, SUM(TURN_LAG_6M) AS TURN_LAG_6M,
t.TTL_TURN_6M, t.AVG_TURN_1M, t.TURN_MTH_GROUP, t.AVG_TURN_MTH_ACTIVE, t.TURN_MTH_GROUP_ACTIVE, COUNT(CASE WHEN t.MONTHLY_CREDIT_AMT > 0 THEN t.REPORT_DT END) AS TURN_MTH_CNT, 
TD_SYSFNLIB.OREPLACE(CASE WHEN t.CUSTOMER_TYPE_CD = 'Ч' THEN UPPER(COALESCE(ci.LAST_NM,'')||' '||COALESCE(ci.FIRST_NM,'')||' '||COALESCE(ci.MIDDLE_NM,''))
WHEN t.CUSTOMER_TYPE_CD = 'Ю' THEN UPPER(COALESCE(co.ORGANIZATION_SHORT_NM, co.ORGANIZATION_NM)) END, 'ИНДИВИДУАЛЬНЫЙ ПРЕДПРИНИМАТЕЛЬ','ИП') AS CUSTOMER_NM, 
co.ORG_TYPE_CD, co.OWNERSHIP_PATTERN_CD, co.OGRN_NUM, COALESCE(ci.TAX_PAYER_NUM, co.TAX_PAYER_NUM) AS INN, 
ci.PASSPORT_FULL_NUM, ci.PASSPORT_ISSUE_DT, ci.PASSPORT_ISSUER_NM
FROM RKO_CUST_ACC_TURN_AGG_CRED t
LEFT JOIN CDM.CD_GLOBAL_INDIVIDUAL_CUSTOMER ci
ON t.CUSTOMER_GLOBAL_RK = ci.CUSTOMER_MDM_RK AND t.CUSTOMER_TYPE_CD = ci.CUSTOMER_TYPE_CD 
AND ci.DELETED_FLG = '0' AND t.ISSUE_DT BETWEEN ci.EFFECTIVE_FROM_DTTM AND ci.EFFECTIVE_TO_DTTM
LEFT JOIN CDM.CD_GLOBAL_CORPORATE_CUSTOMER co
ON t.CUSTOMER_GLOBAL_RK = co.CUSTOMER_MDM_RK AND t.CUSTOMER_TYPE_CD = co.CUSTOMER_TYPE_CD 
AND co.DELETED_FLG = '0' AND t.ISSUE_DT BETWEEN co.EFFECTIVE_FROM_DTTM AND co.EFFECTIVE_TO_DTTM
GROUP BY t.CUSTOMER_GLOBAL_RK, CUST_MDM_ID, t.CUSTOMER_TYPE_CD, t.MIGR_ROOT_AGREEMENT_RK, t.ISSUE_DT, CUSTOMER_NM, co.ORG_TYPE_CD, co.OWNERSHIP_PATTERN_CD, co.OGRN_NUM, INN, ci.PASSPORT_FULL_NUM, 
ci.PASSPORT_ISSUE_DT, ci.PASSPORT_ISSUER_NM, t.TTL_TURN_6M, t.AVG_TURN_1M, t.TURN_MTH_GROUP,  t.AVG_TURN_MTH_ACTIVE, t.TURN_MTH_GROUP_ACTIVE
) WITH DATA PRIMARY INDEX(CUSTOMER_GLOBAL_RK, CUSTOMER_TYPE_CD, MIGR_ROOT_AGREEMENT_RK);
COLLECT STATISTICS COLUMN (CUSTOMER_GLOBAL_RK, CUSTOMER_TYPE_CD, MIGR_ROOT_AGREEMENT_RK) ON RKO_CUST_TURN_AGG_CRED;
　
DROP TABLE RKO_CUST_TURN_CRED;
CREATE TABLE RKO_CUST_TURN_CRED AS (
SELECT 
t.CUSTOMER_GLOBAL_RK, t.CUST_MDM_ID, t.CUSTOMER_TYPE_CD, 
t.MIGR_ROOT_AGREEMENT_RK, t.ISSUE_DT, 
c.BRANCH_CD, c.CONTRACT_NUM, c.CONTRACT_AMT, c.PRODUCT_OPERATIONAL_ID, 
t.TURN_LAG_1M, t.TURN_LAG_2M, t.TURN_LAG_3M, t.TURN_LAG_4M, t.TURN_LAG_5M, t.TURN_LAG_6M,
t.TTL_TURN_6M, t.AVG_TURN_1M, t.TURN_MTH_GROUP, t.AVG_TURN_MTH_ACTIVE, t.TURN_MTH_GROUP_ACTIVE, t.TURN_MTH_CNT, 
t.CUSTOMER_NM, t.ORG_TYPE_CD, t.OWNERSHIP_PATTERN_CD, t.OGRN_NUM, t.INN, t.PASSPORT_FULL_NUM, t.PASSPORT_ISSUE_DT, t.PASSPORT_ISSUER_NM
FROM RKO_CUST_TURN_AGG_CRED t
JOIN RKO_CREDIT_CONTRACT c 
ON t.MIGR_ROOT_AGREEMENT_RK = c.MIGR_ROOT_AGREEMENT_RK
AND t.CUSTOMER_TYPE_CD = c.CUSTOMER_TYPE_CD
) WITH DATA PRIMARY INDEX(CUSTOMER_GLOBAL_RK, CUSTOMER_TYPE_CD, MIGR_ROOT_AGREEMENT_RK);
